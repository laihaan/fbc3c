const fs = require('fs');
const path = require('path');

// ƒê∆∞·ªùng d·∫´n ƒë·∫øn file JSON ch·ª©a d·ªØ li·ªáu ng∆∞·ªùi d√πng
const dataFilePath = path.join(__dirname, '../data/data.json');

// H√†m th·ª±c thi l·ªánh x·∫øp h·∫°ng t·∫•t c·∫£ ng∆∞·ªùi d√πng
module.exports = {
    name: 'rankall',
    execute: async (message, api) => {
        try {
            // ƒê·ªçc d·ªØ li·ªáu t·ª´ file JSON
            const data = JSON.parse(fs.readFileSync(dataFilePath, 'utf8'));

            // Ki·ªÉm tra d·ªØ li·ªáu h·ª£p l·ªá
            if (!Array.isArray(data)) {
                throw new Error('D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá');
            }

            // S·∫Øp x·∫øp ng∆∞·ªùi d√πng theo s·ªë d∆∞ gi·∫£m d·∫ßn
            data.sort((a, b) => (b.money || 0) - (a.money || 0));

            // T·∫°o danh s√°ch ng∆∞·ªùi d√πng v√† s·ªë d∆∞
            let rankingMessage = 'üìù B·∫£ng x·∫øp h·∫°ng ng∆∞·ªùi d√πng:\n';
            data.forEach((user, index) => {
                const money = user.money ? user.money.toLocaleString() : '0';
                rankingMessage += `${index + 1}. ${user.name || 'Ng∆∞·ªùi d√πng'} - ${money} VND\n`;
            });

            // G·ª≠i th√¥ng b√°o b·∫£ng x·∫øp h·∫°ng
            api.sendMessage(rankingMessage, message.threadID);
        } catch (error) {
            console.error('L·ªói khi th·ª±c thi l·ªánh rankall:', error.message);
            api.sendMessage('C√≥ l·ªói x·∫£y ra khi th·ª±c thi l·ªánh x·∫øp h·∫°ng.', message.threadID);
        }
    }
};
