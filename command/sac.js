const fs = require('fs').promises;
const path = require('path');

// ƒê∆∞·ªùng d·∫´n ƒë·∫øn file JSON ch·ª©a d·ªØ li·ªáu ng∆∞·ªùi d√πng v√† kho
const inventoryFilePath = path.join(__dirname, '../data/inv.json');
const huntbotFilePath = path.join(__dirname, '../data/huntbot.json');

module.exports = {
    name: 'sac',
    execute: async (message, api) => {
        const uid = message.senderID;

        try {
            // ƒê·ªçc d·ªØ li·ªáu t·ª´ c√°c file JSON
            const [inventoryData, huntbotData] = await Promise.all([
                fs.readFile(inventoryFilePath, 'utf8'),
                fs.readFile(huntbotFilePath, 'utf8')
            ]);

            const inventory = JSON.parse(inventoryData);
            const huntbot = JSON.parse(huntbotData);

            // T√¨m th√¥ng tin kho c·ªßa ng∆∞·ªùi d√πng
            const userInventory = inventory.find(item => item.senderID === uid);

            if (!userInventory || !Object.keys(userInventory.items).length) {
                api.sendMessage('üö´ B·∫°n kh√¥ng c√≥ v·∫≠t ph·∫©m n√†o trong kho ƒë·ªÉ chuy·ªÉn ƒë·ªïi.', message.threadID);
                return;
            }

            // Chuy·ªÉn ƒë·ªïi t·∫•t c·∫£ c√°c v·∫≠t ph·∫©m trong kho th√†nh Essence
            let totalEssence = 0;
            for (const [item, quantity] of Object.entries(userInventory.items)) {
                totalEssence += quantity; // 1 v·∫≠t ph·∫©m = 1 Essence
            }

            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng Essence cho ng∆∞·ªùi d√πng
            if (!huntbot.users[uid]) {
                huntbot.users[uid] = { essence: 0 };
            }
            huntbot.users[uid].essence += totalEssence;

            // X√≥a t·∫•t c·∫£ v·∫≠t ph·∫©m trong kho c·ªßa ng∆∞·ªùi d√πng
            userInventory.items = {};

            // L∆∞u d·ªØ li·ªáu v√†o file
            await Promise.all([
                fs.writeFile(inventoryFilePath, JSON.stringify(inventory, null, 2)),
                fs.writeFile(huntbotFilePath, JSON.stringify(huntbot, null, 2))
            ]);

            // G·ª≠i th√¥ng b√°o k·∫øt qu·∫£ chuy·ªÉn ƒë·ªïi
            api.sendMessage(`‚úÖ ƒê√£ chuy·ªÉn ƒë·ªïi to√†n b·ªô v·∫≠t ph·∫©m trong kho th√†nh ${totalEssence} Essence.`, message.threadID);
        } catch (error) {
            console.error('L·ªói khi th·ª±c thi l·ªánh !sac:', error);
            api.sendMessage('üö® ƒê√£ x·∫£y ra l·ªói khi th·ª±c hi·ªán l·ªánh chuy·ªÉn ƒë·ªïi. Vui l√≤ng th·ª≠ l·∫°i sau.', message.threadID);
        }
    }
};
